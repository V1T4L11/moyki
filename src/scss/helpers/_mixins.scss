@mixin container($max-width: 100%) {
  max-width: $max-width;
  margin: 0 auto;
  &::after {
    content: " ";
    display: block;
    clear: both;
  }
}

@mixin col($n) {
  flex: 1 0 span($n);
  // width: span($n);
  padding: 0 gutter() / 2;
}

@mixin ff-base() {
  font-family: $ff-base;
}

@mixin v-align() {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}
@mixin h-align() {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}
@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin optional-at-root($sel) {
  @at-root #{if(not &, $sel, selector-append(&, $sel))} {
    @content;
  }
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') { @content; }
  @include optional-at-root(':-moz-placeholder') { @content; }
  @include optional-at-root('::-moz-placeholder') { @content; }
  @include optional-at-root(':-ms-input-placeholder') { @content; }
}
// Usage
// .foo {
//   @include placeholder {
//     color: green;
//   }
// }

// @include placeholder {
//   color: red;
// }


// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

// @include font-face(Samplino, fonts/Samplino);